---
import Header from '#/components/Header'
import Hero from '#/components/Hero'
import Values from '#/components/Values'
import Services from '#/components/Services'
import Statistics from '#/components/Statistics'
import Testimonials from '#/components/Testimonials'
import Contact from '#/components/Contact'
import Footer from '#/components/Footer'
import Layout from '#/pages/_Layout.astro'

const currentYear = new Date().getFullYear()
---

<Layout>
	<div class="bg-background min-h-screen">
		<!-- Background with modern gradient blur effect -->
		<div class="fixed inset-0 -z-10">
			<div
				class="from-background via-background/95 to-background/90 absolute inset-0 bg-gradient-to-br"
			>
			</div>
			<div class="tech-grid absolute inset-0 opacity-5"></div>
			<div
				class="bg-primary/5 absolute left-1/4 top-0 h-96 w-96 animate-pulse rounded-full blur-3xl"
			>
			</div>
			<div
				class="bg-accent/5 absolute bottom-0 right-1/4 h-64 w-64 animate-pulse rounded-full blur-3xl"
				style="animation-delay: '2s'"
			>
			</div>
		</div>

		<!-- Header Navigation -->
		<Header />

		<!-- Main Content -->
		<main>
			<!-- Hero Section -->
			<Hero />

			<!-- Values Section -->
			<Values />

			<!-- Services Section -->
			<Services />

			<!-- Statistics Section -->
			<Statistics />

			<!-- Testimonials Section -->
			<Testimonials />

			<!-- Contact Section -->
			<Contact />
		</main>

		<!-- Footer -->
		<Footer />
	</div>

	<!-- Custom Scripts -->
	<script>
		// Smooth scrolling for anchor links
		document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
			anchor.addEventListener(
				'click',
				function (this: HTMLAnchorElement, e: Event) {
					e.preventDefault()
					const target = document.querySelector(this.getAttribute('href') || '')
					if (target) {
						target.scrollIntoView({
							behavior: 'smooth',
							block: 'start',
						})
					}
				},
			)
		})

		// Parallax effect for background elements
		window.addEventListener('scroll', () => {
			const scrolled = window.pageYOffset
			const parallaxElements = document.querySelectorAll('.parallax')

			parallaxElements.forEach((element) => {
				const el = element as HTMLElement
				const speed = parseFloat(el.dataset.speed || '0.5')
				el.style.transform = `translateY(${scrolled * speed}px)`
			})
		})

		// Intersection Observer for scroll animations
		const observerOptions: IntersectionObserverInit = {
			threshold: 0.1,
			rootMargin: '0px 0px -50px 0px',
		}

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.add('animate-in')
				}
			})
		}, observerOptions)

		// Observe all scroll-reveal elements
		document.querySelectorAll('.scroll-reveal').forEach((el) => {
			observer.observe(el)
		})

		// Add hover effect to cards
		document.querySelectorAll('.card-tech').forEach((card) => {
			const cardEl = card as HTMLElement
			cardEl.addEventListener('mouseenter', function () {
				cardEl.style.transform = 'translateY(-4px)'
			})

			cardEl.addEventListener('mouseleave', function () {
				cardEl.style.transform = 'translateY(0)'
			})
		})
	</script>

	<!-- Enhanced Animation Styles -->
	<style>
		@keyframes float {
			0%,
			100% {
				transform: translateY(0px);
			}
			50% {
				transform: translateY(-20px);
			}
		}

		@keyframes fade-in {
			from {
				opacity: 0;
				transform: translateY(30px);
			}
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		@keyframes gradient {
			0% {
				background-position: 0% 50%;
			}
			50% {
				background-position: 100% 50%;
			}
			100% {
				background-position: 0% 50%;
			}
		}

		.animate-float {
			animation: float 6s ease-in-out infinite;
		}

		.animate-fade-in {
			animation: fade-in 0.6s ease-out forwards;
		}

		.animate-gradient {
			background-size: 200% 200%;
			animation: gradient 3s ease infinite;
		}

		.scroll-reveal {
			opacity: 0;
			transform: translateY(30px);
			transition: all 0.6s ease-out;
		}

		.scroll-reveal.animate-in {
			opacity: 1;
			transform: translateY(0);
		}

		/* Enhanced hover effects */
		.card-tech {
			transition: all 0.3s ease;
		}

		.card-tech:hover {
			transform: translateY(-4px);
			box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
		}

		/* Tech grid background */
		.tech-grid {
			background-image:
				linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
				linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
			background-size: 50px 50px;
		}

		/* Gradient text */
		.text-gradient {
			background: linear-gradient(
				135deg,
				hsl(var(--primary)),
				hsl(var(--accent))
			);
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
			background-clip: text;
		}

		/* Glass morphism effect */
		.glass {
			background: rgba(255, 255, 255, 0.05);
			backdrop-filter: blur(10px);
			border: 1px solid rgba(255, 255, 255, 0.1);
		}

		/* Glow effects */
		.glow-effect {
			box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
		}

		/* Button effects */
		.btn-tech {
			position: relative;
			overflow: hidden;
			transition: all 0.3s ease;
		}

		.btn-tech::before {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 100%;
			background: linear-gradient(
				90deg,
				transparent,
				rgba(255, 255, 255, 0.2),
				transparent
			);
			transition: left 0.5s ease;
		}

		.btn-tech:hover::before {
			left: 100%;
		}

		/* Gradient buttons */
		.gradient-cyber {
			background: linear-gradient(
				135deg,
				hsl(var(--primary)),
				hsl(var(--accent))
			);
		}

		.gradient-tech {
			background: linear-gradient(
				135deg,
				hsl(var(--accent)),
				hsl(var(--primary))
			);
		}

		/* Responsive typography */
		.text-responsive-h1 {
			font-size: clamp(2.5rem, 5vw, 3.5rem);
			line-height: 1.2;
		}

		.text-responsive-h2 {
			font-size: clamp(2rem, 4vw, 2.5rem);
			line-height: 1.3;
		}

		.text-responsive-body {
			font-size: clamp(1rem, 2vw, 1.125rem);
			line-height: 1.7;
		}

		/* Performance optimizations */
		@media (prefers-reduced-motion: reduce) {
			.animate-float,
			.animate-gradient,
			.animate-fade-in {
				animation: none;
			}

			.card-tech {
				transition: none;
			}
		}
	</style>
</Layout>
