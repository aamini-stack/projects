name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: 'Whether to update the playwright reference screenshots'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup
      - name: Test
        run: pnpm turbo run format typecheck lint test:unit

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup
      - name: Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps
      - name: Test
        run: pnpm test:integration

  find-apps:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.calculate-apps.outputs.apps }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get Changed Apps
        id: calculate-apps
        env:
          TURBO_SCM_BASE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
        run: |
          APPS=$(npx turbo run build --filter="./apps/*" --dry=json | jq -c .packages)
          echo $APPS
          echo "apps=$APPS" >> $GITHUB_OUTPUT

  e2e:
    needs: [find-apps]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.find-apps.outputs.apps) }}
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup
      # Deploy
      - name: Deploy to Vercel
        working-directory: ./apps/${{ matrix.app }}
        run: |
          pnpm i -g vercel
          pnpm vercel link \
            --yes \
            --repo \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ vars.TURBO_TEAM }}
          BASE_URL=$(pnpm vercel \
            --yes \
            ${{ github.ref_name == 'main' && '--prod' || '' }} \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ vars.TURBO_TEAM }} \
            -m githubDeployment='1' \
            -m githubCommitRef='feature/${{ github.head_ref || github.ref_name }}' \
            -m githubCommitSha='${{ github.sha }}' \
          | tail -1)
          echo BASE_URL=$BASE_URL >> $GITHUB_ENV
      # Test
      - name: Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: './apps/${{ matrix.app }}'
        env:
          VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
        run: pnpm e2e${{ inputs.update_snapshots && ':update' || '' }}
      # Upload screenshots + report
      - name: Upload Screenshots
        if: success() && inputs.update_snapshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.app }}
          path: './*/**/e2e/**/*.png'
          retention-days: 1
      - name: Publish Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ matrix.app }}
          path: './apps/${{ matrix.app }}/playwright-report'
          retention-days: 30

  collect-reports:
    runs-on: ubuntu-latest
    needs: [e2e]
    steps:
      - name: Download All Screenshot Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true

  commit-screenshots:
    runs-on: ubuntu-latest
    needs: [e2e]
    if: inputs.update_snapshots
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Download All Screenshot Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: screenshots-*
          merge-multiple: true
      - name: Commit Screenshots
        run: |
          # https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-to-a-pr-using-the-built-in-token
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add *.png
          git commit -m "Update Screenshots"
          git push
