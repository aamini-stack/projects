name: Continous Integration

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  VERCEL_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
  TURBO_SCM_BASE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: 'Build'
        run: pnpm turbo run build --affected

  get_affected_apps:
    name: 'Get Affected Apps'
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      affected_apps: ${{ steps.get_apps.outputs.affected_apps }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Get Affected Apps
        id: get_apps
        run: |
          AFFECTED_APPS=$(pnpm turbo ls --affected --output=json | jq -c '[.packages.items[] | select(.path | contains("apps/")) | select(.name | contains("-e2e") | not) | .name]')
          echo "affected_apps=$AFFECTED_APPS" >> $GITHUB_OUTPUT

  deploy_app:
    name: 'Deploy ${{ matrix.app }} to Vercel'
    needs: [get_affected_apps]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.get_affected_apps.outputs.affected_apps) }}
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest
      - name: Link
        run: vercel link --repo --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ vars.TURBO_TEAM }}
      - name: Deploy
        id: deploy
        run: |
          URL=$(vercel deploy ./apps/${{ matrix.app }} --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ vars.TURBO_TEAM }} ${{ github.ref == 'refs/heads/main' && '--production' || '' }})
          echo "url=$URL" >> $GITHUB_OUTPUT

  collect_deploy_urls:
    name: 'Collect Deployed URLs'
    needs: [deploy_app]
    runs-on: ubuntu-latest
    outputs:
      urls: ${{ steps.collect_urls.outputs.urls }}
    steps:
      - name: Collect URLs
        id: collect_urls
        run: |
          URLS="{}"
          for job in $(echo '${{ toJSON(needs.deploy_app.outputs) }}' | jq -c '.'); do
            APP_NAME=$(echo "$job" | jq -r 'keys_without_null_values[0]')
            APP_URL=$(echo "$job" | jq -r '.[$APP_NAME].url')
            URLS=$(echo "$URLS" | jq --arg key "$APP_NAME" --arg value "$APP_URL" '. + {($key): $value}')
          done
          echo "urls=$URLS" >> $GITHUB_OUTPUT

  e2e:
    name: 'E2E tests for ${{ matrix.app.key }}'
    runs-on: windows-latest
    needs: [collect_deploy_urls]
    strategy:
      matrix:
        app: ${{ fromJson(needs.collect_deploy_urls.outputs.urls) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps
      - name: Run Playwright tests
        env:
          BASE_URL: ${{ matrix.app.value }}
        run: echo $BASE_URL && pnpm turbo run e2e --filter=${{ matrix.app.key }}-e2e
      - uses: actions/upload-artifact@v4
        id: artifact-upload
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ matrix.app.key }}
          path: '**/apps/${{ matrix.app.key }}-e2e/playwright-report'
          retention-days: 30
      - name: Comment on PR with report link
        uses: thollander/actions-comment-pull-request@v3
        if: ${{ failure() }}
        with:
          message: |
            ### Playwright visual snapshot differences were detected for `${{ matrix.app.key }}`.
            View the [Playwright report](${{ steps.artifact-upload.outputs.artifact-url }}) to review the visual differences.
            **To approve the snapshot changes and update the snapshots, please comment:** /approve-snapshots
