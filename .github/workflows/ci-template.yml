name: CI template

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      update_snapshots:
        required: false
        type: boolean
        default: false
    secrets:
      VERCEL_TOKEN:
        required: true
      TURBO_TOKEN:
        required: true
      VERCEL_PROJECT_ID:
        required: true
      VERCEL_ORG_ID:
        required: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup

      - name: Run All Checks
        run: pnpm turbo run --filter=${{ inputs.app_name }} build format typecheck lint test

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest
      - name: Deploy to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel deploy --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ vars.TURBO_TEAM }} ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}

  e2e:
    needs: [deploy]
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/setup

      - name: Install Playwright Browsers
        working-directory: ./apps/${{ inputs.app_name }}
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./apps/${{ inputs.app_name }}
        env:
          BASE_URL: https://${{ inputs.app_name }}-git-${{ github.head_ref || github.ref_name }}-${{ vars.TURBO_TEAM }}.vercel.app
        run: pnpm turbo run e2e${{ inputs.update_snapshots && ':update' || '' }} --filter=${{ inputs.app_name }}

      - name: Update Screenshots
        if: ${{ !failure() && inputs.update_snapshots }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "*/*.png"
          git commit -m "Update Screenshots"
          git push

      - name: Publish Report
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playwright-report-${{ inputs.app_name }}
          path: '**/apps/${{ inputs.app_name }}/playwright-report'
          retention-days: 30
